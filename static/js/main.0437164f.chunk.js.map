{"version":3,"sources":["util/ScoreCalculator.js","components/Tile.jsx","components/PlaceholderTile.jsx","components/Tiles.jsx","components/Alert.jsx","util/API.js","pages/MainPage.js","pages/ViewAllPage.jsx","App.js","index.js"],"names":["ONE_POINT","TWO_POINT","THREE_POINT","FOUR_POINT","FIVE_POINT","EIGHT_POINT","TEN_POINT","getPointOf","letter","point","indexOf","Tile","className","PlaceholderTile","Tiles","letters","maxLen","split","map","tmpTiles","numTilesToRender","length","i","push","renderPlaceholderTiles","Alert","alertType","message","color","API","axios","create","baseURL","getAllEntries","a","get","res","data","saveEntry","score","post","word","response","toString","MainPage","useState","setLetters","setScore","alertVisibility","setAlertVisibility","type","alertInfo","setAlertInfo","handleInputChange","e","target","value","toUpperCase","match","forEach","calculateScore","displayAlert","save","setTimeout","autoFocus","onChange","onClick","to","ViewAll","entries","setEntries","useEffect","fetchEntries","index","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAMA,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1DC,EAAY,CAAC,IAAK,KAClBC,EAAc,CAAC,IAAK,IAAK,IAAK,KAC9BC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,KAClCC,EAAa,CAAC,KACdC,EAAc,CAAC,IAAK,KACpBC,EAAY,CAAC,IAAK,KAElBC,EAAa,SAACC,GAClB,IAAIC,GAAS,EAQb,OAPIT,EAAUU,QAAQF,IAAW,IAAGC,EAAQ,GACxCR,EAAUS,QAAQF,IAAW,IAAGC,EAAQ,GACxCP,EAAYQ,QAAQF,IAAW,IAAGC,EAAQ,GAC1CN,EAAWO,QAAQF,IAAW,IAAGC,EAAQ,GACzCL,EAAWM,QAAQF,IAAW,IAAGC,EAAQ,GACzCJ,EAAYK,QAAQF,IAAW,IAAGC,EAAQ,GAC1CH,EAAUI,QAAQF,IAAW,IAAGC,EAAQ,IACrCA,GCfM,SAASE,EAAT,GAAkC,IAAlBH,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MACrC,OACE,yBAAKG,UAAU,yPACb,wBAAIA,UAAU,wDACXJ,EACD,yBAAKI,UAAU,gCAAgCH,KCLxC,SAASI,IACtB,OACE,yBAAKD,UAAU,kJCCJ,SAASE,EAAT,GAAqC,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAiBvC,OACE,yBAAKJ,UAAU,kHAhBRG,EAAQE,MAAM,IAAIC,KAAI,SAACV,GAC5B,OAAO,kBAACG,EAAD,CAAMH,OAAQA,EAAQC,MAAOF,EAAWC,QAIpB,WAI7B,IAHA,IAAIW,EAAW,GACXC,EAAmBJ,EAASD,EAAQM,OAE/BC,EAAI,EAAGA,EAAIF,EAAkBE,IACpCH,EAASI,KAAK,kBAACV,EAAD,OAGhB,OAAOM,EAKJK,ICvBQ,SAASC,EAAT,GAAwC,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACnCC,EACU,YAAdF,EACI,+CACA,yCAEN,OACE,yBAAKd,UAAS,iBAAYgB,EAAZ,gCACZ,4BAAQhB,UAAU,aAAac,EAA/B,MACA,0BAAMd,UAAU,UAAhB,IAA2Be,I,YCR3BE,E,OAAMC,EAAMC,OAAO,CAAEC,QADV,2BAGXC,EAAa,uCAAG,4BAAAC,EAAA,+EAEAL,EAAIM,IAAI,WAFR,cAEZC,EAFY,yBAGXA,EAAIC,MAHO,gEAMb,MANa,yDAAH,qDASbC,EAAS,uCAAG,mCAAAJ,EAAA,6DAASnB,EAAT,EAASA,QAASwB,EAAlB,EAAkBA,MAC9Bb,EAAY,GACZC,EAAU,GAFE,kBAIIE,EAAIW,KAAK,UAAW,CAAEC,KAAM1B,EAASwB,UAJzC,cAKdb,EAAY,UACZC,EAAO,iBAAaZ,EAAb,yBANO,kDAQdW,EAAY,QAEVC,EADE,KAAIe,SACI,KAAIA,SAASL,KAEb,KAAIM,WAZF,iCAeT,CAAEjB,YAAWC,YAfJ,0DAAH,sDCPA,SAASiB,IACtB,IADiC,EAEHC,mBAAS,IAFN,mBAE1B9B,EAF0B,KAEjB+B,EAFiB,OAGPD,mBAAS,GAHF,mBAG1BN,EAH0B,KAGnBQ,EAHmB,OAIaF,mBAAS,aAJtB,mBAI1BG,EAJ0B,KAITC,EAJS,OAKCJ,mBAAS,CAAEK,KAAM,GAAIvB,QAAS,KAL/B,mBAK1BwB,EAL0B,KAKfC,EALe,KAO3BC,EAAoB,SAACC,GACzB,GAAIA,EAAEC,OAAOC,MAAMnC,QAPH,GAOwB,CACtC,IAAIoB,EAAOa,EAAEC,OAAOC,MAAMC,cACtBhB,EAAKiB,MAAM,iBACbZ,EAAWL,GACXM,ENCe,SAACN,GACtB,IAAIF,EAAQ,EAKZ,OAJAE,EAAKxB,MAAM,IAAI0C,SAAQ,SAACnD,GACtB,IAAIC,EAAQF,EAAWC,IACR,IAAXC,IAAc8B,GAAS9B,MAEtB8B,EMPQqB,CAAenB,UAG1BoB,EAAa,QAAS,8BAIpBC,EAAI,uCAAG,gCAAA5B,EAAA,sEACwBI,EAAU,CAC3CvB,UACAwB,UAHS,gBACLb,EADK,EACLA,UAAWC,EADN,EACMA,QAIjBkC,EAAanC,EAAWC,GALb,2CAAH,qDAaJkC,EAAe,SAACnC,EAAWC,GAC/ByB,EAAa,CAAEF,KAAMxB,EAAWC,YAChCsB,EAAmB,WACnBc,YAAW,kBAAMd,EAAmB,eAAc,MAGpD,OACE,yBAAKrC,UAAU,8BACb,wBAAIA,UAAU,qCAAd,uBACA,yBAAKA,UAAS,UAAKoC,EAAL,SACZ,kBAACvB,EAAD,CAAOC,UAAWyB,EAAUD,KAAMvB,QAASwB,EAAUxB,WAEvD,kBAACb,EAAD,CAAOC,QAASA,EAASC,OA3CX,KA4Cd,8BACE,2BACEJ,UAAU,6CACVsC,KAAK,OACLM,MAAOzC,EACPiD,WAAS,EACTC,SAAU,SAACX,GAAD,OAAOD,EAAkBC,OAGvC,wBAAI1C,UAAU,iBAAd,WAAuC2B,GACvC,yBAAK3B,UAAU,kBACb,4BACEA,UAAU,6CACVsD,QA/BM,WACZpB,EAAW,IACXC,EAAS,KA2BL,SAMA,4BACEnC,UAAU,+CACVsD,QAASJ,GAFX,QAMA,kBAAC,IAAD,CAAMK,GAAG,YACP,4BAAQvD,UAAU,gDAAlB,eCxEK,SAASwD,IAAW,IAAD,EACFvB,mBAAS,IADP,mBACzBwB,EADyB,KAChBC,EADgB,KAEhCC,qBAAU,YACU,uCAAG,sBAAArC,EAAA,kEACnBoC,EADmB,SACFrC,IADE,6EAAH,qDAGlBuC,KACC,IAYH,OACE,yBAAK5D,UAAU,6CACb,yBAAKA,UAAU,mDACb,2BAAOA,UAAU,eACf,+BACE,wBAAIA,UAAU,4DACZ,wBAAIA,UAAU,0CAAd,QACA,wBAAIA,UAAU,0CAAd,WAGJ,2BAAOA,UAAU,mBApBhByD,EAAQnD,KAAI,WAAkBuD,GAAW,IAA1BhC,EAAyB,EAAzBA,KAAMF,EAAmB,EAAnBA,MACpBX,EAAQ6C,EAAQ,IAAM,EAAI,WAAa,cAC7C,OACE,wBAAI7D,UAAS,UAAKgB,IAChB,wBAAIhB,UAAU,oCAAoC6B,GAClD,wBAAI7B,UAAU,oCAAoC2B,UAkBtD,kBAAC,IAAD,CAAM4B,GAAG,KACP,4BAAQvD,UAAU,8CAAlB,UCjBO8D,MAff,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAACP,EAAD,OAEF,kBAAC,IAAD,CAAOO,KAAK,KACV,kBAAC/B,EAAD,UCRVgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0437164f.chunk.js","sourcesContent":["const ONE_POINT = ['A', 'E', 'I', 'O', 'U', 'L', 'N', 'S', 'T', 'R'];\nconst TWO_POINT = ['D', 'G'];\nconst THREE_POINT = ['B', 'C', 'M', 'P'];\nconst FOUR_POINT = ['F', 'H', 'V', 'W', 'Y'];\nconst FIVE_POINT = ['K'];\nconst EIGHT_POINT = ['J', 'X'];\nconst TEN_POINT = ['Q', 'Z'];\n\nconst getPointOf = (letter) => {\n  let point = -1;\n  if (ONE_POINT.indexOf(letter) > -1) point = 1;\n  if (TWO_POINT.indexOf(letter) > -1) point = 2;\n  if (THREE_POINT.indexOf(letter) > -1) point = 3;\n  if (FOUR_POINT.indexOf(letter) > -1) point = 4;\n  if (FIVE_POINT.indexOf(letter) > -1) point = 5;\n  if (EIGHT_POINT.indexOf(letter) > -1) point = 8;\n  if (TEN_POINT.indexOf(letter) > -1) point = 10;\n  return point;\n};\n\nconst calculateScore = (word) => {\n  let score = 0;\n  word.split('').forEach((letter) => {\n    let point = getPointOf(letter);\n    if (point !== -1) score += point;\n  });\n  return score;\n};\n\nexport { calculateScore, getPointOf };\n","import React from 'react';\n\nexport default function Tile({ letter, point }) {\n  return (\n    <div className='flex flex-col w-12 h-16 m-3 items-center rounded-md shadow-md border-t-2 border-r-4 border-b-4 border-yellow-500 bg-gradient-to-br from-yellow-400 to-yellow-300 md:w-20 md:h-24 md:rounded-md md:border-t-4 md:border-b-8 md:border-r-8 md:shadow-md'>\n      <h1 className='m-auto text-3xl font-serif font-semibold md:text-5xl'>\n        {letter}\n        <sub className='text-sm font-sans md:text-xl'>{point}</sub>\n      </h1>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function PlaceholderTile() {\n  return (\n    <div className='flex flex-col w-12 h-16  border-gray-800 border-dashed bg-gray-500 m-3 rounded-md shadow-md border-2 md:w-20 md:h-24 md:border-4 md:shadow-lg'></div>\n  );\n}\n","import React from 'react';\nimport Tile from './Tile';\nimport PlaceholderTile from './PlaceholderTile';\nimport { getPointOf } from './../util/ScoreCalculator';\n\nexport default function Tiles({ letters, maxLen }) {\n  const renderTiles = () => {\n    return letters.split('').map((letter) => {\n      return <Tile letter={letter} point={getPointOf(letter)} />;\n    });\n  };\n\n  const renderPlaceholderTiles = () => {\n    let tmpTiles = [];\n    let numTilesToRender = maxLen - letters.length;\n\n    for (let i = 0; i < numTilesToRender; i++) {\n      tmpTiles.push(<PlaceholderTile />);\n    }\n\n    return tmpTiles;\n  };\n  return (\n    <div className='flex flex-wrap flex-row h-auto  my-5 justify-center max-w-sm md:my-8 md:max-w-xl lg:max-w-full lg:flex-no-wrap'>\n      {renderTiles()}\n      {renderPlaceholderTiles()}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Alert({ alertType, message }) {\n  const color =\n    alertType === 'Success'\n      ? 'bg-green-100 border-green-400 text-green-700'\n      : 'bg-red-100 border-red-400 text-red-700';\n\n  return (\n    <div className={`border ${color} px-4 py-3 rounded relative`}>\n      <strong className='font-bold'>{alertType}! </strong>\n      <span className='inline'> {message}</span>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:5000/';\nconst API = axios.create({ baseURL: BASE_URL });\n\nconst getAllEntries = async () => {\n  try {\n    const res = await API.get('entries');\n    return res.data;\n  } catch (err) {}\n\n  return null;\n};\n\nconst saveEntry = async ({ letters, score }) => {\n  let alertType = '';\n  let message = '';\n  try {\n    const res = await API.post('entries', { word: letters, score });\n    alertType = 'Success';\n    message = `Entry \"${letters}\" saved successfully.`;\n  } catch (err) {\n    alertType = 'Error';\n    if (err.response) {\n      message = err.response.data;\n    } else {\n      message = err.toString();\n    }\n  }\n  return { alertType, message };\n};\n\nexport { getAllEntries, saveEntry };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { calculateScore } from './../util/ScoreCalculator';\nimport Tiles from './../components/Tiles';\nimport Alert from './../components/Alert';\nimport { getAllEntries, saveEntry } from './../util/API';\n\nexport default function MainPage() {\n  const MAX_TILES = 10;\n  const [letters, setLetters] = useState('');\n  const [score, setScore] = useState(0);\n  const [alertVisibility, setAlertVisibility] = useState('invisible');\n  const [alertInfo, setAlertInfo] = useState({ type: '', message: '' });\n\n  const handleInputChange = (e) => {\n    if (e.target.value.length <= MAX_TILES) {\n      let word = e.target.value.toUpperCase();\n      if (word.match(/^[A-Za-z]*$/)) {\n        setLetters(word);\n        setScore(calculateScore(word));\n      }\n    } else {\n      displayAlert('Error', 'Max letter length reached');\n    }\n  };\n\n  const save = async () => {\n    let { alertType, message } = await saveEntry({\n      letters,\n      score,\n    });\n    displayAlert(alertType, message);\n  };\n\n  const clear = () => {\n    setLetters('');\n    setScore(0);\n  };\n\n  const displayAlert = (alertType, message) => {\n    setAlertInfo({ type: alertType, message });\n    setAlertVisibility('visible');\n    setTimeout(() => setAlertVisibility('invisible'), 3000);\n  };\n\n  return (\n    <div className='flex flex-col items-center'>\n      <h1 className='text-4xl mt-3 font-medium md:mt-5'>Score your scrabble</h1>\n      <div className={`${alertVisibility} h-5`}>\n        <Alert alertType={alertInfo.type} message={alertInfo.message} />\n      </div>\n      <Tiles letters={letters} maxLen={MAX_TILES} />\n      <form>\n        <input\n          className='my-3 p-2 border border-gray-800 rounded-sm'\n          type='text'\n          value={letters}\n          autoFocus\n          onChange={(e) => handleInputChange(e)}\n        ></input>\n      </form>\n      <h1 className='text-2xl my-5'>Score : {score}</h1>\n      <div className='flex space-x-5'>\n        <button\n          className='w-20 h-8 rounded-md bg-pink-700 text-white'\n          onClick={clear}\n        >\n          Clear\n        </button>\n        <button\n          className='w-20 h-8 rounded-md bg-indigo-700 text-white'\n          onClick={save}\n        >\n          Save\n        </button>\n        <Link to='view-all'>\n          <button className='w-20 h-8 rounded-md bg-indigo-700 text-white'>\n            View All\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getAllEntries } from './../util/API';\n\nexport default function ViewAll() {\n  const [entries, setEntries] = useState([]);\n  useEffect(() => {\n    const fetchEntries = async () => {\n      setEntries(await getAllEntries());\n    };\n    fetchEntries();\n  }, []);\n  const renderTable = () => {\n    return entries.map(({ word, score }, index) => {\n      const color = index % 2 === 0 ? 'bg-white' : 'bg-gray-300';\n      return (\n        <tr className={`${color}`}>\n          <td className='border border-gray-700 px-4 py-2'>{word}</td>\n          <td className='border border-gray-700 px-4 py-2'>{score}</td>\n        </tr>\n      );\n    });\n  };\n  return (\n    <div className='flex flex-col justify-center items-center'>\n      <div className='flex justify-center my-5 overflow-scroll h-auto'>\n        <table className='table-fixed'>\n          <thead>\n            <tr className='bg-gradient-to-r from-teal-400 to-blue-300 text-gray-800'>\n              <th className='w-1/2 border border-gray-700 px-4 py-2'>Word</th>\n              <th className='w-1/3 border border-gray-700 px-4 py-2'>Score</th>\n            </tr>\n          </thead>\n          <tbody className='odd:bg-gray-200'>{renderTable()}</tbody>\n        </table>\n      </div>\n      <Link to='/'>\n        <button className='w-20 h-8 rounded-md bg-pink-700 text-white'>\n          Back\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport ViewAllPage from './pages/ViewAllPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/view-all'>\n          <ViewAllPage />\n        </Route>\n        <Route path='/'>\n          <MainPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}